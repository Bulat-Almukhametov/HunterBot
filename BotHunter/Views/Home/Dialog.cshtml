@model BotHunter.Models.Dialog

@{
    ViewBag.Title = "Диалог";
}

<h2 class="padding-left-3">Постройте диалог</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="blocklyDiv" style="height: 600px; width: 800px;"></div>


        <div class="form-group">
            @Html.LabelFor(model => model.Aiml, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Aiml, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Aiml, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="button success" />
                @Html.ActionLink("Назад", "DialogsList", null, new { @class = "button" })
            </div>
        </div>
    </div>
}

<div>

</div>
@section TopScripts {
    <script type="text/javascript" src="/Scripts/blockly_compressed.js"></script>
    <script type="text/javascript" src="~/Scripts/blockly_blocks.js"></script>
    <script type="text/javascript" src="~/Scripts/blockly_workspace.js"></script>
    <script type="text/javascript" src="/Scripts/ru.js"></script>
}
@section Scripts {
    <script>
        var workspace = Blockly.inject('blocklyDiv',
            {
                media: '/Content/media/',
                toolbox: window.blockly_toolbox
            });


        var xml = Blockly.Xml.textToDom(window.blockly_workspace);
        Blockly.Xml.domToWorkspace(xml, workspace);
            //workspace.addChangeListener(function () {
            //    $("#codeContainer").valв(Blockly.JavaScript.workspaceToCode(workspace))

            //});


    </script>

}
@section Styles {
    <link rel="stylesheet" href="/Content/jquery-ui.css" />
}
